// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health": {
            "get": {
                "description": "apiのヘルスチェックを行う。ルーティングが正常に登録されているかを確かめる。",
                "tags": [
                    "HealthCheck"
                ],
                "summary": "apiのヘルスチェックを行う",
                "responses": {
                    "200": {
                        "description": "Health check message",
                        "schema": {
                            "$ref": "#/definitions/presenter.SuccessResponse-health_healthResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "メールアドレス・パスワードで認証し、署名されたトークンを返す",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "ユーザーのログイン",
                "parameters": [
                    {
                        "description": "認証に必要な情報",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "署名されたトークンを含む情報",
                        "schema": {
                            "$ref": "#/definitions/presenter.SuccessResponse-auth_LoginResponse"
                        }
                    },
                    "400": {
                        "description": "不正なリクエスト",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    },
                    "401": {
                        "description": "パスワードが不一致",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "内部サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    }
                }
            }
        },
        "/logout": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "メールアドレス・パスワードで認証し、署名されたトークンを返す",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "ユーザーのログアウト",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "内部サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "全ユーザーのタスクを全て表示する",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "全てのタスクを表示する",
                "responses": {
                    "200": {
                        "description": "タスクの情報",
                        "schema": {
                            "$ref": "#/definitions/presenter.SuccessResponse-array_task_GetTaskResponse"
                        }
                    },
                    "400": {
                        "description": "不正なリクエスト",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "内部サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "内容、タスク状態からユーザーに紐づくタスクを作成する",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "タスクを作成する",
                "parameters": [
                    {
                        "description": "タスク作成のための情報",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/task.PostTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "作成したタスクの情報",
                        "schema": {
                            "$ref": "#/definitions/presenter.SuccessResponse-task_PostTaskResponse"
                        }
                    },
                    "400": {
                        "description": "不正なリクエスト",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "内部サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "idを指定してタスクを表示する",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "タスクを表示する",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenter.SuccessResponse-task_GetTaskResponse"
                        }
                    },
                    "400": {
                        "description": "不正なリクエスト",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "内部サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "指定したidのタスクを削除する",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "タスクを削除する",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "不正なリクエスト",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    },
                    "403": {
                        "description": "権限エラー",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "内部サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "タスクの状態(todo/doing/done)を 指定して更新する",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "タスク状態を更新する",
                "parameters": [
                    {
                        "description": "タスク更新のための情報",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/task.UpdateTaskStateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "更新したタスクの情報",
                        "schema": {
                            "$ref": "#/definitions/presenter.SuccessResponse-task_UpdateTaskStateResponse"
                        }
                    },
                    "400": {
                        "description": "不正なリクエスト",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    },
                    "403": {
                        "description": "権限エラー",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "内部サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "新しいユーザーを登録する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "ユーザーの登録",
                "parameters": [
                    {
                        "description": "ユーザー登録のための情報",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.PostUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "登録されたユーザーの情報",
                        "schema": {
                            "$ref": "#/definitions/presenter.SuccessResponse-user_PostUserResponse"
                        }
                    },
                    "400": {
                        "description": "不正なリクエスト",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "内部サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "ユーザーを退会させ、ユーザー情報を削除する",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "ユーザーの退会",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "不正なリクエスト",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "内部サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "ユーザー情報（名前・メールアドレス）を更新する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "ユーザーの更新",
                "parameters": [
                    {
                        "description": "ユーザー更新のための情報",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "登録されたユーザーの情報",
                        "schema": {
                            "$ref": "#/definitions/presenter.SuccessResponse-user_UpdateUserResponse"
                        }
                    },
                    "400": {
                        "description": "不正なリクエスト",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "内部サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    }
                }
            }
        },
        "/user/tasks": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "ログインしているユーザーのタスクを全て表示する",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "ユーザーが持つ全てのタスクを表示する",
                "responses": {
                    "200": {
                        "description": "タスクの情報",
                        "schema": {
                            "$ref": "#/definitions/presenter.SuccessResponse-array_task_GetTaskResponse"
                        }
                    },
                    "400": {
                        "description": "不正なリクエスト",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "内部サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "全てのユーザーのID・名前をリストで取得する",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "全ユーザーを取得する",
                "responses": {
                    "200": {
                        "description": "登録されたユーザーの情報",
                        "schema": {
                            "$ref": "#/definitions/presenter.SuccessResponse-array_user_GetUsersResponse"
                        }
                    },
                    "400": {
                        "description": "不正なリクエスト",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "内部サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/presenter.FailureResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.LoginResponse": {
            "type": "object",
            "properties": {
                "signed_token": {
                    "type": "string"
                }
            }
        },
        "health.healthResponse": {
            "type": "object",
            "properties": {
                "health_check": {
                    "type": "string"
                }
            }
        },
        "presenter.FailureResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "presenter.SuccessResponse-array_task_GetTaskResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/task.GetTaskResponse"
                    }
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "presenter.SuccessResponse-array_user_GetUsersResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.GetUsersResponse"
                    }
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "presenter.SuccessResponse-auth_LoginResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/auth.LoginResponse"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "presenter.SuccessResponse-health_healthResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/health.healthResponse"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "presenter.SuccessResponse-task_GetTaskResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/task.GetTaskResponse"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "presenter.SuccessResponse-task_PostTaskResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/task.PostTaskResponse"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "presenter.SuccessResponse-task_UpdateTaskStateResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/task.UpdateTaskStateResponse"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "presenter.SuccessResponse-user_PostUserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/user.PostUserResponse"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "presenter.SuccessResponse-user_UpdateUserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/user.UpdateUserResponse"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "task.GetTaskResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "task.PostTaskRequest": {
            "type": "object",
            "required": [
                "content",
                "state"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "task.PostTaskResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "task.UpdateTaskStateRequest": {
            "type": "object",
            "required": [
                "state"
            ],
            "properties": {
                "state": {
                    "type": "string"
                }
            }
        },
        "task.UpdateTaskStateResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "user.GetUsersResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "user.PostUserRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user.PostUserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "user.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "user.UpdateUserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "TodoRestAPI",
	Description:      "This is TodoRestPI by golang.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
